{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mr.San\\\\Desktop\\\\newproject\\\\components\\\\Sidebar.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nconst StyledSideNav = styled.div`   \n    position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n    height: 100%;\n    width: 75px;     /* Set the width of the sidebar */\n    z-index: 1;      /* Stay on top of everything */\n    top: 3.4em;      /* Stay at the top */\n    background-color: #222; /* Black */\n    overflow-x: hidden;     /* Disable horizontal scroll */\n    padding-top: 10px;\n`;\n\nclass SideNav extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onItemClick\", path => {\n      this.setState({\n        activePath: path\n      });\n    });\n\n    this.state = {\n      activePath: '/',\n      items: [{\n        path: '/',\n\n        /* path is used as id to check which NavItem is active basically */\n        name: 'Home',\n        css: 'fa fa-fw fa-home',\n        key: 1\n        /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n\n      }, {\n        path: '/about',\n        name: 'About',\n        css: 'fa fa-fw fa-clock',\n        key: 2\n      }, {\n        path: '/NoMatch',\n        name: 'NoMatch',\n        css: 'fas fa-hashtag',\n        key: 3\n      }]\n    };\n  }\n\n  render() {\n    const {\n      items,\n      activePath\n    } = this.state;\n    return __jsx(StyledSideNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, items.map(item => {\n      return __jsx(NavItem, {\n        path: item.path,\n        name: item.name,\n        css: item.css,\n        onItemClick: this.onItemClick,\n        active: item.path === activePath,\n        key: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }\n      });\n    }));\n  }\n\n}\n\nconst StyledNavItem = styled.div`\n    height: 70px;\n    width: 75px; /* width must be same size as NavBar to center */\n    text-align: center; /* Aligns <a> inside of NavIcon div */\n    margin-bottom: 0;   /* Puts space between NavItems */\n    a {\n        font-size: 2.7em;\n        color: ${props => props.active ? \"white\" : \"#9FFFCB\"};\n        :hover {\n            opacity: 0.7;\n            text-decoration: none; /* Gets rid of underlining of icons */\n        }  \n    }\n`;\n\nclass NavItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"handleClick\", () => {\n      const {\n        path,\n        onItemClick\n      } = this.props;\n      onItemClick(path);\n    });\n  }\n\n  render() {\n    const {\n      active\n    } = this.props;\n    return __jsx(StyledNavItem, {\n      active: active,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, __jsx(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, __jsx(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 32\n      }\n    }, \"Home\"), \"  \", __jsx(NavIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 45\n      }\n    })), __jsx(Link, {\n      href: \"/about\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, __jsx(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 37\n      }\n    }, \"About\"), \"  \", __jsx(NavIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 51\n      }\n    })))), \"                    \", __jsx(NavIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 34\n      }\n    }));\n  }\n\n}\n\nconst NavIcon = styled.div`\n`;\nexport default class Sidebar extends React.Component {\n  render() {\n    return __jsx(SideNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Mr.San/Desktop/newproject/components/Sidebar.js"],"names":["React","styled","Link","StyledSideNav","div","SideNav","Component","constructor","props","path","setState","activePath","state","items","name","css","key","render","map","item","onItemClick","StyledNavItem","active","NavItem","NavIcon","Sidebar"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Link from 'next/link';\r\n\r\nconst StyledSideNav = styled.div`   \r\n    position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\r\n    height: 100%;\r\n    width: 75px;     /* Set the width of the sidebar */\r\n    z-index: 1;      /* Stay on top of everything */\r\n    top: 3.4em;      /* Stay at the top */\r\n    background-color: #222; /* Black */\r\n    overflow-x: hidden;     /* Disable horizontal scroll */\r\n    padding-top: 10px;\r\n`;\r\n\r\nclass SideNav extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activePath: '/',\r\n            items: [\r\n                {\r\n                  path: '/', /* path is used as id to check which NavItem is active basically */\r\n                  name: 'Home',\r\n                  css: 'fa fa-fw fa-home',\r\n                  key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\r\n                },\r\n                {\r\n                  path: '/about',\r\n                  name: 'About',\r\n                  css: 'fa fa-fw fa-clock',\r\n                  key: 2\r\n                },\r\n                {\r\n                  path: '/NoMatch',\r\n                  name: 'NoMatch',\r\n                  css: 'fas fa-hashtag',\r\n                  key: 3\r\n                },\r\n              ]\r\n        }\r\n    }\r\n\r\n    onItemClick = (path) => {\r\n        this.setState({ activePath: path });\r\n    }\r\n\r\n    render() {\r\n        const { items, activePath } = this.state;\r\n        return(\r\n            <StyledSideNav>\r\n                {\r\n                    items.map((item) => {\r\n                        return (\r\n                            <NavItem \r\n                                path={item.path}\r\n                                name={item.name}\r\n                                css={item.css}\r\n                                onItemClick={this.onItemClick}\r\n                                active={item.path === activePath}\r\n                                key={item.key}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </StyledSideNav>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst StyledNavItem = styled.div`\r\n    height: 70px;\r\n    width: 75px; /* width must be same size as NavBar to center */\r\n    text-align: center; /* Aligns <a> inside of NavIcon div */\r\n    margin-bottom: 0;   /* Puts space between NavItems */\r\n    a {\r\n        font-size: 2.7em;\r\n        color: ${(props) => props.active ? \"white\" : \"#9FFFCB\"};\r\n        :hover {\r\n            opacity: 0.7;\r\n            text-decoration: none; /* Gets rid of underlining of icons */\r\n        }  \r\n    }\r\n`;\r\n\r\nclass NavItem extends React.Component {\r\n    handleClick = () => {\r\n        const { path, onItemClick } = this.props;\r\n        onItemClick(path);\r\n    }\r\n\r\n    render() {\r\n        const { active } = this.props;\r\n        return(\r\n            <StyledNavItem active={active}>\r\n        <ul>\r\n            <li>\r\n                <Link href=\"/\"><a>Home</a>  <NavIcon></NavIcon></Link>\r\n                <Link href=\"/about\"><a>About</a>  <NavIcon></NavIcon></Link>\r\n\r\n            </li>\r\n        </ul>                    <NavIcon></NavIcon>\r\n        \r\n            </StyledNavItem>\r\n        );\r\n    }\r\n}\r\n\r\nconst NavIcon = styled.div`\r\n`;\r\n\r\nexport default class Sidebar extends React.Component {\r\n    render() {\r\n        return (\r\n            <SideNav></SideNav>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}